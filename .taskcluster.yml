# The version is always required
version: 0
# Top level metadata is always required
metadata:
  name: "TaskCluster GitHub Tests"
  description: "All non-integration tests for taskcluster github"
  owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
  source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
tasks:
  # What kind of environment will you need (docker, windows, etc...)
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
  # Worker types correspond to particular machine types (aws size, etc...)
  # worker types may be added by priveleged taskcluster users at tools.taskcluster.net/aws-provisioner
    workerType: "{{ taskcluster.docker.workerType }}"
    extra:
      github:
        # This must be set in order access GitHub info from inside your environment
        env: true
        # Events that will trigger this task
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
    scopes:
      - 'docker-worker:cache:tc-vcs'
      - 'docker-worker:cache:tooltool-cache'

    payload:
      maxRunTime: 10800                           # Job timeout, in seconds
      image: "taskcluster/desktop-build:0.1.3"    # Our docker container (if using docker)
      env:
        MOZHARNESS_SCRIPT: 'mozharness/scripts/fx_desktop_build.py'
        MOZHARNESS_CONFIG: 'builds/releng_base_linux_64_builds.py'
      cache:
        tc-vcs: '/home/worker/.tc-vcs'
        tooltool-cache: '/home/worker/tooltool-cache'
      command:                                    # A command to run, list entries are arguments
        - "/bin/bash"
        - "--login"
        - "-c"
        # FIXME support checkout-pull-request bash function in the desktop-build image
        #- "checkout-pull-request && ./mach build"
        - "./bin/build.sh"
    # Each task also requires explicit metadata
    metadata:
      name: "TaskCluster GitHub Tests"
      description: "All non-integration tests"
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
